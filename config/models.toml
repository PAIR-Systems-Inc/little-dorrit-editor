################################################################################
# O P E N   R O U T E R   M O D E L S
#
# Note: Going forward, we'll just use OpenRouter as its much more convenient
# than juggling a bunch of different API keys for different services.
#
################################################################################

["or_mistral_small_3_1_24b_instruct"]
endpoint = "https://openrouter.ai/api/v1"
model_name = "mistralai/mistral-small-3.1-24b-instruct"
api_key = "${OPEN_ROUTER_API_KEY}"
logical_name = "Mistral Small 3.1 24B"

["or_phi_4_multimodal_instruct"]
endpoint = "https://openrouter.ai/api/v1"
model_name = "microsoft/phi-4-multimodal-instruct"
api_key = "${OPEN_ROUTER_API_KEY}"
logical_name = "Phi 4 Multimodal Instruct"

["or_claude_3_7_sonnet"]
endpoint = "https://openrouter.ai/api/v1"
model_name = "anthropic/claude-3.7-sonnet"
api_key = "${OPEN_ROUTER_API_KEY}"
logical_name = "Claude 3.7 Sonnet"

# Qwen Family ########

["or_qwen2_5_vl_72b_instruct"]
endpoint = "https://openrouter.ai/api/v1"
model_name = "qwen/qwen2.5-vl-72b-instruct"
api_key = "${OPEN_ROUTER_API_KEY}"
logical_name = "Qwen2.5 VL 72B Instruct"

["or_qwen_vl_plus"]
endpoint = "https://openrouter.ai/api/v1"
model_name = "qwen/qwen-vl-plus"
api_key = "${OPEN_ROUTER_API_KEY}"
logical_name = "Qwen VL Plus"

["or_qwen_vl_max"]
endpoint = "https://openrouter.ai/api/v1"
model_name = "qwen/qwen-vl-max"
api_key = "${OPEN_ROUTER_API_KEY}"
logical_name = "Qwen VL Max"

# Llama Family ########

["or_llama_3_2_90b_vision_instruct"]
endpoint = "https://openrouter.ai/api/v1"
model_name = "meta-llama/llama-3.2-90b-vision-instruct"
api_key = "${OPEN_ROUTER_API_KEY}"
logical_name = "Llama 3.2 90B Vision Instruct"

["or_llama_4_maverick"]
endpoint = "https://openrouter.ai/api/v1"
model_name = "meta-llama/llama-4-maverick"
api_key = "${OPEN_ROUTER_API_KEY}"
logical_name = "Llama 4 Maverick"

["or_llama_4_scout"]
endpoint = "https://openrouter.ai/api/v1"
model_name = "meta-llama/llama-4-scout"
api_key = "${OPEN_ROUTER_API_KEY}"
logical_name = "Llama 4 Scout"

# GPT Family ########

[or_o1_pro]
endpoint = "https://openrouter.ai/api/v1"
model_name = "openai/o1-pro"
api_key = "${OPEN_ROUTER_API_KEY}"
logical_name = "OpenAI o1-pro (OR)"

["or_gpt_4o_mini"]
endpoint = "https://openrouter.ai/api/v1"
model_name = "openai/gpt-4o-mini"
api_key = "${OPEN_ROUTER_API_KEY}"
logical_name = "GPT-4o-mini (OR)"

["or_gpt_4_turbo"]
endpoint = "https://openrouter.ai/api/v1"
model_name = "openai/gpt-4-turbo"
api_key = "${OPEN_ROUTER_API_KEY}"
logical_name = "GPT-4o (OR)"

["or_gpt_4o_2024_11_20"]
endpoint = "https://openrouter.ai/api/v1"
model_name = "openai/gpt-4o-2024-11-20"
api_key = "${OPEN_ROUTER_API_KEY}"
logical_name = "GPT-4o (2024-11-20 OR)"

["or_chatgpt_4o_latest"]
endpoint = "https://openrouter.ai/api/v1"
model_name = "openai/chatgpt-4o-latest"
api_key = "${OPEN_ROUTER_API_KEY}"
logical_name = "ChatGPT-4o (OR)"

["or_gpt_4_5_preview"]
endpoint = "https://openrouter.ai/api/v1"
model_name = "openai/gpt-4.5-preview"
api_key = "${OPEN_ROUTER_API_KEY}"
logical_name = "GPT-4.5 Preview (OR)"

# Gemini and Gemma Family ########

["or_gemini_2_0_flash_001"]
endpoint = "https://openrouter.ai/api/v1"
model_name = "google/gemini-2.0-flash-001"
api_key = "${OPEN_ROUTER_API_KEY}"
logical_name = "Google: Gemini 2.0 Flash"

["or_gemini_2_5_pro_preview_03_25"]
endpoint = "https://openrouter.ai/api/v1"
model_name = "google/gemini-2.5-pro-preview-03-25"
api_key = "${OPEN_ROUTER_API_KEY}"
logical_name = "Gemini 2.5 Pro Preview 3/25"

["or_gemma_3_27b_it"]
endpoint = "https://openrouter.ai/api/v1"
model_name = "google/gemma-3-27b-it"
api_key = "${OPEN_ROUTER_API_KEY}"
logical_name = "Gemma 3 27B"

# Deepseek Family ########

[or_deepseek_chat_v3_0324]
endpoint = "https://openrouter.ai/api/v1"
model_name = "deepseek/deepseek-chat-v3-0324"
api_key = "${OPEN_ROUTER_API_KEY}"
logical_name = "DeepSeek V3 0324"

[or_deepseek_r1]
endpoint = "https://openrouter.ai/api/v1"
model_name = "deepseek/deepseek-r1"
api_key = "${OPEN_ROUTER_API_KEY}"
logical_name = "DeepSeek R1"

# Grok Family ########

[or_grok_2_vision_1212]
endpoint = "https://openrouter.ai/api/v1"
model_name = "x-ai/grok-2-vision-1212"
api_key = "${OPEN_ROUTER_API_KEY}"
logical_name = "Grok 2 Vision 1212"

################################################################################
# O P E N   A I   M O D E L S
################################################################################

[gpt-4o]
endpoint = "https://api.openai.com/v1"
model_name = "gpt-4o"
api_key = "${OPENAI_API_KEY}"
logical_name = "GPT-4o"

[gpt-4o-mini]
endpoint = "https://api.openai.com/v1"
model_name = "gpt-4o-mini"
api_key = "${OPENAI_API_KEY}"
logical_name = "GPT-4o Mini"

[gpt-4-turbo]
endpoint = "https://api.openai.com/v1"
model_name = "gpt-4-turbo"
api_key = "${OPENAI_API_KEY}"
logical_name = "GPT-4 Turbo"

[gpt_4_1]
endpoint = "https://api.openai.com/v1"
model_name = "gpt-4.1"
api_key = "${OPENAI_API_KEY}"
logical_name = "GPT-4.1"

[gpt_4_1_mini]
endpoint = "https://api.openai.com/v1"
model_name = "gpt-4.1-mini"
api_key = "${OPENAI_API_KEY}"
logical_name = "GPT-4.1 Mini"

[gpt_4_1_nano]
endpoint = "https://api.openai.com/v1"
model_name = "gpt-4.1-nano"
api_key = "${OPENAI_API_KEY}"
logical_name = "GPT-4.1 Nano"

[gpt_o4_mini]
endpoint = "https://api.openai.com/v1"
model_name = "o4-mini"
api_key = "${OPENAI_API_KEY}"
logical_name = "GPT-o4 Mini"
temperature = 1.0

[gpt_o3]
endpoint = "https://api.openai.com/v1"
model_name = "o3"
api_key = "${OPENAI_API_KEY}"
logical_name = "GPT-o3"

["gpt-4.5-preview"]
endpoint = "https://api.openai.com/v1"
model_name = "gpt-4.5-preview"
api_key = "${OPENAI_API_KEY}"
logical_name = "GPT-4.5 Preview"

################################################################################
# A N T H R O P I C   M O D E L S
################################################################################

[claude-3-7-sonnet-latest]
endpoint = "https://api.anthropic.com/v1"
model_name = "claude-3-7-sonnet-latest"
api_key = "${ANTHROPIC_API_KEY}"
logical_name = "Claude 3.7 Sonnet"
